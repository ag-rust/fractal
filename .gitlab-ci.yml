include: 'https://gitlab.gnome.org/GNOME/citemplates/raw/master/flatpak/flatpak_ci_initiative.yml'

stages:
  - check
  - test
  - deploy

variables:
    BUNDLE: "org.gnome.FractalDevel.flatpak"
    MANIFEST_PATH: "flatpak/org.gnome.Fractal.json"
    FLATPAK_MODULE: "fractal"
    FLATPAK_IMAGE: "registry.gitlab.gnome.org/gnome/gnome-runtime-images/rust_bundle:master"

.flatpak_cache_template: &flatpak_cache
    cache:
        key: "flatpak"
        paths:
          - .flatpak-builder/cache/
          - _build/target/
          - target_docs/
          - target_test/

check:
    image: "registry.gitlab.com/alatiera/rustfmt-oci-image/rustfmt:stable"
    stage: "check"
    script:
        # Create blank versions of our configured files
        # so rustfmt does not yell about non-existent files or completely empty files
        - echo -e "" >> fractal-gtk/src/config.rs
        - echo -e "" >> fractal-gtk/src/static_resources.rs
        - rustc -Vv && cargo -Vv
        - cargo --version
        - cargo fmt --all -- --check

flatpak:
  extends: '.flatpak'
  image: "$FLATPAK_IMAGE"
  variables:
    RUNTIME_REPO: 'https://nightly.gnome.org/gnome-nightly.flatpakrepo'
    APP_ID: "org.gnome.FractalDevel"

nightly:
  image: 'registry.gitlab.gnome.org/gnome/gnome-runtime-images/flat-manager-client'
  stage: 'deploy'
  timeout: '100m'
  dependencies: ['flatpak']
  needs: ['flatpak']
  script:
    - tar xf repo.tar
    - flatpak build-update-repo --generate-static-deltas repo/
    - BUILD_ID=$(flat-manager-client create ${FLAT_MANAGER_URL} ${FLATPAK_REPO} --end-of-life="Fractal was migrated to a new codebase and the app-id changed" --end-of-life-rebase="org.gnome.Fractal.Devel")
    - flat-manager-client push --commit --publish --wait ${BUILD_ID} repo/ || result=$?
    - flat-manager-client purge ${BUILD_ID}
    - exit $result
  variables:
    FLAT_MANAGER_URL: https://flat-manager.gnome.org/
    FLATPAK_REPO: nightly
  only:
    refs:
      - 'master'
    variables:
      - $REPO_TOKEN
