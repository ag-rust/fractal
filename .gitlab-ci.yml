include: 'https://gitlab.gnome.org/Community/Purism/citemplates/-/raw/add_arch/flatpak/flatpak_ci_initiative.yml'

stages:
  - check
  - test
  - build
  - doc
  - deploy

variables:
  FLATPAK_MODULE: "fractal"
  RUNTIME_REPO: "https://nightly.gnome.org/gnome-nightly.flatpakrepo"

.vars_nightly:
  variables:
    MANIFEST_PATH: "build-aux/org.gnome.Fractal.Devel.json"
    APP_ID: "org.gnome.Fractal.Devel"  

# Configure and run code checks
# Exits and fails if an error is encountered
checks:
  image: "rustlang/rust:nightly-slim"
  stage: check
  script:
    - scripts/checks.sh --verbose --force-install

# Lint the code
cargo-clippy:
  image: 'registry.gitlab.gnome.org/gnome/gnome-runtime-images/x86_64/gnome:master'
  stage: check
  variables:
    MANIFEST_PATH: "build-aux/org.gnome.Fractal.Hack.json"
    APP_ID: "org.gnome.Fractal.Hack"
  tags:
    - flatpak
  script:
    - flatpak-builder --keep-build-dirs --user --disable-rofiles-fuse --stop-at=${FLATPAK_MODULE} flatpak_app --repo=repo ${BRANCH:+--default-branch=$BRANCH} ${MANIFEST_PATH}
    - echo "cargo clippy -- -D warnings" | flatpak-builder --disable-rofiles-fuse --build-shell=${FLATPAK_MODULE} flatpak_app ${MANIFEST_PATH}

build-x86_64:
  extends:
    - .flatpak
    - .vars_nightly
  stage: build
  variables:
    BUNDLE: "fractal-devel-x86_64.flatpak"
  rules:
    - if: $CI_COMMIT_BRANCH != "main"
      variables:
         MANIFEST_PATH: "build-aux/org.gnome.Fractal.Hack.json"
         APP_ID: "org.gnome.Fractal.Hack"
         BUNDLE: "fractal-hack-x86_64.flatpak"

build-aarch64:
  extends:
    - .flatpak
    - .vars_nightly
  stage: build
  variables:
    BUNDLE: "fractal-devel-aarch64.flatpak"
  rules:
    - if: $CI_COMMIT_BRANCH != "main"
      when: manual

# Build the docs
# Only on main
pages:
  extends: .vars_nightly
  image: 'registry.gitlab.gnome.org/gnome/gnome-runtime-images/x86_64/gnome:master'
  stage: doc
  tags:
    - flatpak
  script:
    - flatpak install --user --noninteractive org.freedesktop.Sdk.Extension.rust-nightly//21.08
    - sed -i 's|rust-stable|rust-nightly|g' ${MANIFEST_PATH}
    - flatpak-builder --keep-build-dirs --user --disable-rofiles-fuse --stop-at=${FLATPAK_MODULE} flatpak_app --repo=repo ${BRANCH:+--default-branch=$BRANCH} ${MANIFEST_PATH}
    - echo "ninja src/doc" | flatpak-builder --disable-rofiles-fuse --build-shell=${FLATPAK_MODULE} flatpak_app ${MANIFEST_PATH}
    - mv .flatpak-builder/build/${FLATPAK_MODULE}/_flatpak_build/src/doc public
    - chmod -R a=rwx public
  artifacts:
    paths:
      - 'public'
  only:
    refs:
      - main

# Publish the nightly version
# Only on main
publish_nightly-x86_64:
  extends: .publish_nightly
  dependencies: ['build-x86_64']
  needs: ['build-x86_64']
publish_nightly-aarch64:
  extends: .publish_nightly
  dependencies: ['build-aarch64']
  needs: ['build-aarch64']
